{
    "name": "durablefunctionsmonitor",
    "displayName": "Durable Functions Monitor",
    "description": "Monitoring/debugging UI tool for Azure Durable Functions",
    "version": "6.4.1",
    "engines": {
        "vscode": "^1.39.0"
    },
    "categories": [
        "Other",
        "Debuggers"
    ],
    "homepage": "https://github.com/microsoft/DurableFunctionsMonitor",
    "repository": {
        "type": "git",
        "url": "https://github.com/microsoft/DurableFunctionsMonitor"
    },
    "bugs": {
        "url": "https://github.com/microsoft/DurableFunctionsMonitor/issues"
    },
    "icon": "logo.png",
    "keywords": [
        "Azure Durable Functions",
        "Azure Durable Entities",
        "Azure Functions",
        "Serverless",
        "Azure"
    ],
    "publisher": "DurableFunctionsMonitor",
    "license": "MIT",
    "activationEvents": [
        "onView:durableFunctionsMonitorTreeView",
        "onCommand:extension.durableFunctionsMonitor",
        "onCommand:extension.durableFunctionsMonitorPurgeHistory",
        "onCommand:extension.durableFunctionsMonitorCleanEntityStorage",
        "onCommand:extension.durableFunctionsMonitorBatchOps",
        "onCommand:durableFunctionsMonitorTreeView.attachToAnotherTaskHub",
        "onCommand:extension.durableFunctionsMonitorGotoInstanceId",
        "onCommand:extension.durableFunctionsMonitorVisualizeAsGraph",
        "onCommand:durableFunctionsMonitorTreeView.startNewInstance",
        "onDebug"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "views": {
            "azure": [
                {
                    "id": "durableFunctionsMonitorTreeView",
                    "name": "Durable Functions"
                }
            ]
        },
        "commands": [
            {
                "command": "extension.durableFunctionsMonitor",
                "title": "Durable Functions Monitor"
            },
            {
                "command": "extension.durableFunctionsMonitorPurgeHistory",
                "title": "Durable Functions Monitor: Purge History..."
            },
            {
                "command": "extension.durableFunctionsMonitorCleanEntityStorage",
                "title": "Durable Functions Monitor: Clean Entity Storage..."
            },
            {
                "command": "extension.durableFunctionsMonitorBatchOps",
                "title": "Durable Functions Monitor: Execute Batch Operations..."
            },
            {
                "command": "extension.durableFunctionsMonitorGotoInstanceId",
                "title": "Durable Functions Monitor: Go to instanceId..."
            },
            {
                "command": "extension.durableFunctionsMonitorVisualizeAsGraph",
                "title": "Visualize Functions as a Graph..."
            },
            {
                "command": "durableFunctionsMonitorTreeView.attachToTaskHub",
                "title": "Attach"
            },
            {
                "command": "durableFunctionsMonitorTreeView.detachFromTaskHub",
                "title": "Detach"
            },
            {
                "command": "durableFunctionsMonitorTreeView.openInstancesInStorageExplorer",
                "title": "Open *Instances table in Storage Explorer"
            },
            {
                "command": "durableFunctionsMonitorTreeView.openHistoryInStorageExplorer",
                "title": "Open *History table in Storage Explorer"
            },
            {
                "command": "durableFunctionsMonitorTreeView.deleteTaskHub",
                "title": "Delete Task Hub..."
            },
            {
                "command": "durableFunctionsMonitorTreeView.refresh",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "durableFunctionsMonitorTreeView.attachToAnotherTaskHub",
                "title": "Attach to Task Hub...",
                "icon": {
                    "light": "resources/light/plug.svg",
                    "dark": "resources/dark/plug.svg"
                }
            },
            {
                "command": "durableFunctionsMonitorTreeView.detachFromAllTaskHubs",
                "title": "Detach from all Task Hubs...",
                "icon": {
                    "light": "resources/light/unplug.svg",
                    "dark": "resources/dark/unplug.svg"
                }
            },
            {
                "command": "durableFunctionsMonitorTreeView.purgeHistory",
                "title": "Purge History..."
            },
            {
                "command": "durableFunctionsMonitorTreeView.cleanEntityStorage",
                "title": "Clean Entity Storage..."
            },
            {
                "command": "durableFunctionsMonitorTreeView.batchOps",
                "title": "Execute Batch Operations..."
            },
            {
                "command": "durableFunctionsMonitorTreeView.gotoInstanceId",
                "title": "Go to instanceId..."
            },
            {
                "command": "durableFunctionsMonitorTreeView.startNewInstance",
                "title": "Start New Orchestration Instance..."
            },
            {
                "command": "durableFunctionsMonitorTreeView.forgetConnectionString",
                "title": "Forget this Connection String"
            }
        ],
        "menus": {
            "explorer/context": [
                {
                    "command": "extension.durableFunctionsMonitor",
                    "when": "resourceFilename == host.json",
                    "group": "DurableFunctionMonitorGroup@1"
                },
                {
                    "command": "extension.durableFunctionsMonitorPurgeHistory",
                    "when": "resourceFilename == host.json",
                    "group": "DurableFunctionMonitorGroup@2"
                },
                {
                    "command": "extension.durableFunctionsMonitorCleanEntityStorage",
                    "when": "resourceFilename == host.json",
                    "group": "DurableFunctionMonitorGroup@3"
                },
                {
                    "command": "extension.durableFunctionsMonitorBatchOps",
                    "when": "resourceFilename == host.json",
                    "group": "DurableFunctionMonitorGroup@4"
                },
                {
                    "command": "extension.durableFunctionsMonitorGotoInstanceId",
                    "when": "resourceFilename == host.json",
                    "group": "DurableFunctionMonitorGroup@5"
                },
                {
                    "command": "extension.durableFunctionsMonitorVisualizeAsGraph",
                    "when": "resourceFilename == host.json",
                    "group": "DurableFunctionMonitorGroup@6"
                }
            ],
            "view/title": [
                {
                    "command": "durableFunctionsMonitorTreeView.refresh",
                    "when": "view == durableFunctionsMonitorTreeView",
                    "group": "navigation@1"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.detachFromAllTaskHubs",
                    "when": "view == durableFunctionsMonitorTreeView",
                    "group": "navigation@2"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.attachToAnotherTaskHub",
                    "when": "view == durableFunctionsMonitorTreeView",
                    "group": "navigation@3"
                }
            ],
            "view/item/context": [
                {
                    "command": "durableFunctionsMonitorTreeView.gotoInstanceId",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-attached",
                    "group": "2_purge_history@4"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.batchOps",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-attached",
                    "group": "2_purge_history@3"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.cleanEntityStorage",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-attached",
                    "group": "2_purge_history@2"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.purgeHistory",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-attached",
                    "group": "2_purge_history@1"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.startNewInstance",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-attached",
                    "group": "2_purge_history@0"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.deleteTaskHub",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-attached",
                    "group": "3_delete_task_hub@1"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.attachToTaskHub",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-detached",
                    "group": "1_attach_detach@1"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.detachFromTaskHub",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == storageAccount-attached || viewItem == storedStorageAccount-attached"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.openInstancesInStorageExplorer",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-attached || viewItem == taskHub-detached",
                    "group": "4_storage_explorer@1"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.openHistoryInStorageExplorer",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == taskHub-attached || viewItem == taskHub-detached",
                    "group": "4_storage_explorer@2"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.forgetConnectionString",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == storedStorageAccount-attached || viewItem == storedStorageAccount-detached"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.attachToAnotherTaskHub",
                    "when": "view == durableFunctionsMonitorTreeView && viewItem == connectionStrings"
                }
            ],
            "commandPalette": [
                {
                    "command": "durableFunctionsMonitorTreeView.openInstancesInStorageExplorer",
                    "when": "never"
                },
                {
                    "command": "durableFunctionsMonitorTreeView.openHistoryInStorageExplorer",
                    "when": "never"
                }
            ]
        },
        "configuration": {
            "title": "Durable Functions Monitor",
            "properties": {
                "durableFunctionsMonitor.backendBaseUrl": {
                    "type": "string",
                    "default": "http://localhost:{portNr}/a/p/i",
                    "description": "URL the backend(s) to be started on. You might want e.g. to change 'localhost' to '127.0.0.1', if you're observing firewall issues. Also it is possible to lock the port number here, if needed (by default it is automatically chosen from the range 37072-38000)."
                },
                "durableFunctionsMonitor.backendVersionToUse": {
                    "type": "string",
                    "enum": [
                        "Default",
                        ".Net Core 3.1",
                        ".Net Core 2.1"
                    ],
                    "default": "Default",
                    "description": "Choose which backend binaries to use when starting a backend. Currently 'Default' backend targets .NET 6, but you can try other ones, if 'Default' doesn't work for you."
                },
                "durableFunctionsMonitor.customPathToBackendBinaries": {
                    "type": "string",
                    "description": "Local path to a custom backend implementation to use. Overrides 'Backend Version to Use' when set."
                },
                "durableFunctionsMonitor.customPathToAzureFunctionsHost": {
                    "type": "string",
                    "description": "Full path to Azure Functions host (func.exe) to use. By default, the host from globally installed azure-functions-core-tools package is used, but this setting allows to override that."
                },
                "durableFunctionsMonitor.backendTimeoutInSeconds": {
                    "type": "number",
                    "default": 60,
                    "description": "Number of seconds to wait for the backend to start."
                },
                "durableFunctionsMonitor.storageEmulatorConnectionString": {
                    "type": "string",
                    "default": "AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;DefaultEndpointsProtocol=http;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1;TableEndpoint=http://127.0.0.1:10002/devstoreaccount1;",
                    "description": "Connection String to talk to local Storage Emulator. The AccountKey here is a well-known AccountKey. Customize endpoint URLs when needed."
                },
                "durableFunctionsMonitor.showTimeAs": {
                    "type": "string",
                    "default": "UTC",
                    "enum": [
                        "UTC",
                        "Local"
                    ],
                    "description": "In which time zone time values should be displayed"
                },
                "durableFunctionsMonitor.showWhenDebugSessionStarts": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show Durable Functions Monitor when you start debugging a Durable Functions project"
                },
                "durableFunctionsMonitor.taskHubsDiscoveryMode": {
                    "type": "string",
                    "enum": [
                        "Default",
                        "Do not use Storage keys",
                        "Do not use Azure account"
                    ],
                    "default": "Default",
                    "description": "Task Hubs discovery mode. 'Default' first tries to 'listKeys' on the Storage account and then falls back to User Identity. 'Do not use Storage keys' always uses User Identity. `Do not use Azure account` always uses Storage keys."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js",
        "package": "node ./node_modules/@vscode/vsce/vsce package"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^5.2.6",
        "@types/node": "^14.6.4",
        "@types/vscode": "^1.39.0",
        "@vscode/test-electron": "^2.3.5",
        "glob": "^7.1.4",
        "mocha": "^10.0.0",
        "tslint": "^5.12.1",
        "typescript": "^4.4.4",
        "@vscode/vsce": "^2.26.1"
    },
    "dependencies": {
        "@azure/arm-resourcegraph": "^4.2.1",
        "@azure/arm-storage": "^18.1.0",
        "@azure/ms-rest-nodeauth": "^3.1.0",
        "@types/crypto-js": "^3.1.47",
        "@types/rimraf": "^3.0.0",
        "axios": "1.6.2",
        "az-func-as-a-graph.core": "^1.3.3",
        "crypto-js": "^4.2.0",
        "open": "^8.4.0",
        "portscanner": "^2.2.0",
        "rimraf": "^3.0.2"
    },
    "extensionDependencies": [
        "ms-vscode.azure-account"
    ]
}
